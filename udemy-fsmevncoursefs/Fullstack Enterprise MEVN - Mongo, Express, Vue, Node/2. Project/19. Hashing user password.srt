1
00:00:01,410 --> 00:00:04,880
Too harsh to use as password to the database before saving.

2
00:00:04,890 --> 00:00:11,510
We are going to install a library card be equipped jests and to generate a random e-mail confront code.

3
00:00:11,520 --> 00:00:13,890
We are going to install a package called random string

4
00:00:17,850 --> 00:00:25,620
now in I use our schema we can define a pre safe hook which is executed before saving a new instance

5
00:00:25,800 --> 00:00:26,810
or a new documents.

6
00:00:26,830 --> 00:00:33,350
The database users can model pretty safe to pass a function.

7
00:00:33,540 --> 00:00:38,550
And here we can say this that password which is referring to the newly created user.

8
00:00:38,640 --> 00:00:44,580
And we need to hash the common user's password or the current password for the user unsafe to the database.

9
00:00:44,760 --> 00:00:54,590
To do that our import B script from the secret package we installed on this that password which is the

10
00:00:54,590 --> 00:01:01,940
common use us plain password is going to be equal to the hash version and we are going to hash this

11
00:01:01,990 --> 00:01:02,970
synchronous.

12
00:01:03,150 --> 00:01:10,270
And will pass in the current password so the password of the user will not be equal to the hashed version

13
00:01:10,270 --> 00:01:12,030
of the plain password.

14
00:01:12,040 --> 00:01:19,240
We also need to set the confirmation code so this not email confirmed code is going to be close to a

15
00:01:19,240 --> 00:01:19,860
string.

16
00:01:19,990 --> 00:01:22,540
But we want this to be random and very secure.

17
00:01:22,870 --> 00:01:29,110
So we are going to import random string from the random string package we installed.

18
00:01:29,390 --> 00:01:35,550
And this is going to be random string generate and we pass in the number of characters.

19
00:01:35,590 --> 00:01:37,570
In this case let's use 72.

20
00:01:38,110 --> 00:01:44,320
So before saving a user he is going to have to use US password and said the email confirm code what

21
00:01:44,320 --> 00:01:47,260
we can do is also set the creator up.

22
00:01:47,290 --> 00:01:52,110
And this is going to be new dates so that we know when this use of registered their accounts.

23
00:01:52,120 --> 00:02:00,970
Now let's try to register another new user and see the data we get from the API response.

24
00:02:01,360 --> 00:02:07,560
If I click on sign up and if we open the response you can see that we have the correct user's data.

25
00:02:07,660 --> 00:02:15,430
The email confirmed code was generated the creator that is saved and the password is hashed and secure.

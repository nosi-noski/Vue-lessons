1
00:00:00,850 --> 00:00:06,180
In this lesson we winter sets up the rules and controls for application and also sets up API version.

2
00:00:06,380 --> 00:00:09,620
First how create a large folder and in.

3
00:00:09,640 --> 00:00:13,820
I'm going to create a version one folder.

4
00:00:13,860 --> 00:00:17,430
This is going to contain all version one world for application.

5
00:00:17,520 --> 00:00:27,080
And here I'd have an author James file first or import water from Express I'll create a new voter called

6
00:00:27,140 --> 00:00:27,950
Oswald's or

7
00:00:31,370 --> 00:00:32,900
I'll export this while John

8
00:00:36,140 --> 00:00:37,350
now in my Rhodes file.

9
00:00:37,400 --> 00:00:40,110
I'm going to also have an index digest file.

10
00:00:40,310 --> 00:00:46,640
This is also going to be a voter but this water is going to contain all the worlds of application and

11
00:00:46,640 --> 00:00:49,090
it's going to bring together all the versions.

12
00:00:49,090 --> 00:01:02,980
First I'll import water from Express next all imports of water from Version 1 I'll create a new water

13
00:01:03,000 --> 00:01:04,500
called version 1 voucher

14
00:01:09,510 --> 00:01:13,350
and fish and one water is going to use the off water

15
00:01:16,400 --> 00:01:23,030
which means that all the world's in the water are going to be prefixed by API slash V1 and then in the

16
00:01:23,030 --> 00:01:28,130
future when you have a version to agree to a broader vision to offer water and you're going to also

17
00:01:28,130 --> 00:01:32,750
use it with Version 2 then you get to export all of these wells.

18
00:01:32,780 --> 00:01:34,650
So let's export version 1 Walter

19
00:01:37,800 --> 00:01:40,950
and then in index stuff just file we can import it

20
00:01:45,520 --> 00:01:47,470
and use it with your express application.

21
00:01:50,330 --> 00:01:55,750
For the author worlds we also want to prefix them with us to make sure they're distinct.

22
00:01:55,760 --> 00:02:02,780
Now we need a new folder called control us and since we have API versioning in place we also want to

23
00:02:02,780 --> 00:02:09,050
have Version 1 for the controllers which are going to contain all the controllers for version one of

24
00:02:09,050 --> 00:02:12,710
the API now on half of the controller.

25
00:02:14,960 --> 00:02:20,070
Largesse which is going to be the controller for all authentication and points.

26
00:02:20,160 --> 00:02:22,730
Here we're going to have a couple of vaults for authentication.

27
00:02:22,730 --> 00:02:29,480
Let's start with logging which is simply going to be a function that takes in requests and the response

28
00:02:29,570 --> 00:02:34,410
it would handle the logging process on which on the response would have a register.

29
00:02:36,940 --> 00:02:39,090
Which takes in requests on response.

30
00:02:39,180 --> 00:02:47,910
And now we are gonna have a couple more but we are going to export default logging and register so this

31
00:02:47,920 --> 00:02:52,120
controller defines all of the authorized and exports them in an object.

32
00:02:52,140 --> 00:02:55,830
Now in that of wildfire we can import a controller

33
00:03:04,490 --> 00:03:09,720
and from the controller we are going to get of controller.

34
00:03:09,740 --> 00:03:20,330
Now we can register the wilds for logging in off of our char that post logging is going to be off control

35
00:03:20,330 --> 00:03:25,440
of the logging and auth while to not post

36
00:03:28,270 --> 00:03:32,240
register is going to be off controller the register.

37
00:03:32,620 --> 00:03:38,870
And just like that we have API version and with our controllers we have authentication rules set up.

38
00:03:38,890 --> 00:03:42,050
We have our controller sets all given to download working at the moment.

39
00:03:42,070 --> 00:03:47,770
This is the basic setup we need to be able to build a scalable and extensively powerful API.

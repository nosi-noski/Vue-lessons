1
00:00:00,420 --> 00:00:04,590
We are going to implement a complete flash messaging system.

2
00:00:04,980 --> 00:00:06,260
So watch these guys.

3
00:00:06,270 --> 00:00:08,960
This is going to be awesome.

4
00:00:08,970 --> 00:00:12,980
The first thing we want to do is to be able to flash from anywhere in application.

5
00:00:13,140 --> 00:00:22,870
Which means we're going to put this data in the view store so we are going to consume the clans store

6
00:00:22,940 --> 00:00:26,380
folder and would have a new folder caught flash in here.

7
00:00:26,380 --> 00:00:32,080
We'll have an index digest for the default state and we are going to have a mutations

8
00:00:34,510 --> 00:00:38,620
Jess that exports an object.

9
00:00:38,720 --> 00:00:51,080
We are also going to export some constants so export constant flash message and export constant.

10
00:00:51,250 --> 00:01:03,110
Last message we are going to import our media mutations and will export default and objects which will

11
00:01:03,120 --> 00:01:11,340
define states to be an object with messages are we will pass the mutations.

12
00:01:11,400 --> 00:01:15,390
Now we need to register this flash module with our store.

13
00:01:15,810 --> 00:01:18,360
So we are going to import flash

14
00:01:24,080 --> 00:01:25,380
and pass it as a module.

15
00:01:27,050 --> 00:01:27,670
OK.

16
00:01:28,010 --> 00:01:31,580
So how do we flash messages and how do we clear them.

17
00:01:31,580 --> 00:01:37,230
Let's have a global mixing called flash.

18
00:01:37,250 --> 00:01:46,060
This is going to export defaults and objects with methods.

19
00:01:46,170 --> 00:01:53,690
We're going to have a flash method the flash method will take in the message and the type by default.

20
00:01:53,690 --> 00:01:56,770
The type is going to be success.

21
00:01:57,120 --> 00:02:00,390
Then let's import all our mutations for flushing.

22
00:02:00,690 --> 00:02:09,330
So import form stores slash flash mutations.

23
00:02:09,630 --> 00:02:15,250
The first one is flash message and the second is clear flash.

24
00:02:15,510 --> 00:02:16,040
Message

25
00:02:19,710 --> 00:02:28,470
what we want to do is this the store that commit flash each and we are going to pass a payload.

26
00:02:28,470 --> 00:02:33,710
This is going to contain the type of flash message and the message itself.

27
00:02:33,870 --> 00:02:39,690
Then after three thousand milliseconds or after three seconds we want to clear out the flash message

28
00:02:39,690 --> 00:02:40,730
that we just flashed.

29
00:02:40,980 --> 00:02:47,070
But we need a way to be able to identify the exact flash message that we want to play so that if there

30
00:02:47,070 --> 00:02:52,450
are three different flash messages we would only cloud a specific one that we want to do that.

31
00:02:52,520 --> 00:03:01,350
We are going to install a package called you you I.D. to help us generate unique I.D. for all flash

32
00:03:01,350 --> 00:03:02,550
messages.

33
00:03:03,030 --> 00:03:09,490
We would import you I.T. package and we are only going to be needing version 4.

34
00:03:09,510 --> 00:03:10,650
Don't worry about what it means.

35
00:03:10,680 --> 00:03:13,550
It's just going to generate a random unique idea for us.

36
00:03:15,030 --> 00:03:23,040
Now when a new flash is caught we are going to see constant I.D. you I.D. and we will pass the I.D.

37
00:03:23,370 --> 00:03:33,690
to the comments then we are going to have a set timeout and we are going to commit Clef last message

38
00:03:34,650 --> 00:03:40,890
and the payload for clever flash message is going to be the eye of the flash that we want to play and

39
00:03:40,890 --> 00:03:45,780
the default is going to last for three thousand milliseconds which is three seconds.

40
00:03:46,380 --> 00:03:56,680
So we flash so put the flash message to the store and declare flash to remove it after three seconds

41
00:03:56,680 --> 00:03:57,720
of Flushing.

42
00:03:58,330 --> 00:04:06,150
So we are going to go to the mutation and handle both cases when we flash a message.

43
00:04:06,220 --> 00:04:13,600
We received the states on the message and we have which is a state the messages which is the messages

44
00:04:13,690 --> 00:04:16,330
we is equal to state.

45
00:04:16,330 --> 00:04:25,860
The message is with a new message and when we clear a flash we receive the states and the idea of the

46
00:04:25,860 --> 00:04:26,720
flash.

47
00:04:26,910 --> 00:04:35,310
And we are going to see state messages as equal to state the messages that feuds are and will filter

48
00:04:35,310 --> 00:04:38,400
out the specific one with that idea.

49
00:04:38,730 --> 00:04:48,100
So we are going to filter out all the messages where message and I.D. is not equal to Heidi and that's

50
00:04:48,100 --> 00:04:53,910
it all we need to do now is implement these flash mixing with our application.

51
00:04:53,970 --> 00:05:00,990
So we need to import the mixing import flash mixing and use the mixing

52
00:05:05,040 --> 00:05:09,550
now that we use this mixing we can flash from anywhere in application.

53
00:05:09,600 --> 00:05:11,820
Let's start by flushing the out.

54
00:05:11,910 --> 00:05:13,080
So when the user logs out.

55
00:05:13,110 --> 00:05:15,140
We want to flash to do that.

56
00:05:15,150 --> 00:05:23,960
We are going to go to our off mixing to the onset of my thought and I'm going to call this the flash

57
00:05:25,570 --> 00:05:30,630
successfully locked out and the default type is success.

58
00:05:30,640 --> 00:05:37,990
OK now that we are flashing let's go to our browser log out and see if the actions are dispatched so

59
00:05:38,010 --> 00:05:43,320
this in my view store and I'll click on logout and often logging out.

60
00:05:43,330 --> 00:05:47,660
It looks like we receive an error that sees invalid attempts to spread known.

61
00:05:47,740 --> 00:05:49,570
A terrible instance.

62
00:05:49,710 --> 00:05:52,350
And I think I know where the problem is coming from.

63
00:05:52,390 --> 00:06:00,150
We have a message instead of messages and when we try to spread messages it was an error because messages

64
00:06:00,150 --> 00:06:01,010
is not defined.

65
00:06:01,420 --> 00:06:06,430
So in our flash default we have to make sure this is messages.

66
00:06:06,430 --> 00:06:07,060
OK.

67
00:06:07,210 --> 00:06:11,720
So let's logging so let's logging

68
00:06:15,220 --> 00:06:22,120
and let's log out and you can see flash message was committed and left last message was committed with

69
00:06:22,190 --> 00:06:25,020
seconds later OK.

70
00:06:25,040 --> 00:06:28,180
So that's our flashing system in the next lesson.

71
00:06:28,190 --> 00:06:32,660
We are going to display the flash message depending on what the type is.
